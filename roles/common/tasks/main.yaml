---
- name: Dump all vars
  action: template src=templates/dumpall.j2 dest=/tmp/ansible.all
  tags:
    - debug
- name: Display event rx's
  debug:
    var: hostvars[inventory_hostname].groups['event_rx']
  tags:
   - debug
- name: Display  traffix rx's
  debug:
    var: hostvars[inventory_hostname].groups['traffic_rx']
  tags:
   - debug
- name: Display routers
  debug:
    var: hostvars[inventory_hostname].groups['router']
  tags:
   - debug
- name: Create a unique ID
  command: uuidgen
  run_once: false
  delegate_to: '{{inventory_hostname}}'
  register: hostname_id
  tags:
    - main
- name: disable qpid systemd service if running
  service: state=stopped enabled=yes name=qdrouterd.service
  ignore_errors: yes
  tags:
    - main
- name: clean  qpid router service  systemd service
  file: path=/usr/lib/systemd/system/qdrouterd.service state=absent
  ignore_errors: yes
  tags:
    - main
- name: clean  of any old qpid code
  file: name={{ansible_env.HOME}}/qpid-dispatch state=absent force=yes
  tags:
    - main
- name: clone qpid code
  git: repo={{ qpid_base_repo }} accept_hostkey=yes version={{ qpid_branch }} dest={{ansible_env.HOME}}/qpid-dispatch
  tags:
    - main
- name: Install dependency
  yum: name={{ item }} state=present
  with_items:
    - qpid-proton-c-devel
    - python-qpid-proton
    - cmake
    - make
    - gcc
    - python-devel
    - cyrus-sasl-plain
    - cyrus-sasl-devel
    - asciidoc
    - util-linux
  tags:
    - router
- name: copy qpid conf file
  template: src={{hostvars[inventory_hostname].group_names[0]}}.j2 dest={{ansible_env.HOME}}/qpid-dispatch/etc/qdrouterd.conf force=yes
  tags:
    - router
- name: insert/update router config connector block for sender in ansible_env.HOME/qpid-dispatch/etc/qdrouterd.conf
  blockinfile:
    dest: "{{ansible_env.HOME}}/qpid-dispatch/etc/qdrouterd.conf"
    insertbefore : '# END qpid marker'
    marker: ""
    block: |
       connector {
         role: inter-router
          host: {{item}}
          port: 20003
          saslMechanisms: ANONYMOUS
        }
  with_items:
    - "{{hostvars[inventory_hostname].groups['event_rx']}}"
    - "{{hostvars[inventory_hostname].groups['traffic_rx']}}"
  when: inventory_hostname in hostvars[inventory_hostname].groups['router']
  tags:
    - router
- name: insert/update config listener block for sender in ansible_env.HOME/qpid-dispatch/etc/qdrouterd.conf
  blockinfile:
    dest: "{{ansible_env.HOME}}/qpid-dispatch/etc/qdrouterd.conf"
    insertbefore : '# END qpid marker'
    marker: ""
    block: |
       connector {
         role: inter-router
          host: {{item}}
          port: 20002
          saslMechanisms: ANONYMOUS
        }
  with_items: "{{hostvars[inventory_hostname].groups['router']}}"
  when: inventory_hostname in hostvars[inventory_hostname].groups['event_tx'] or inventory_hostname in hostvars[inventory_hostname].groups['traffic_tx']
  tags:
    - router
- name: run install
  shell: >
   cd {{ansible_env.HOME}}/qpid-dispatch;
   mkdir build;
   cd build;
   cmake ..;
   make install
  tags:
    - router
- name: create qpid router systemd service
  template: src=qpid-router-service.j2 dest=/etc/systemd/system/qdrouterd.service mode=0644 seuser=unconfined_u force=yes
  tags:
    - router
- name: reload daemons
  command: systemctl daemon-reload
  tags:
    - router